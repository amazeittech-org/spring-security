<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

    <context:component-scan base-package="com.skb.learn.spring.security" />
    <security:http auto-config="true" use-expressions="false">
        <!--<security:http-basic/>-->
        <security:form-login login-page="/login" login-processing-url="/login" username-parameter="custom_username" password-parameter="custom_password"
        default-target-url="/appointments/" always-use-default-target="true" authentication-failure-url="/login?error=true"/>
        <security:logout logout-url="/logout" logout-success-url="/login?logout=true" delete-cookies="JSESSIONID"/>
        <security:intercept-url pattern="/appointments/*" access="ROLE_USER,ROLE_ADMIN"/>
        <security:intercept-url pattern="/services/*" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/schedule/*" access="ROLE_FOO"/>
        <security:intercept-url pattern="/**" access="ROLE_ANONYMOUS, ROLE_USER"/>
    </security:http>

    <security:authentication-manager>
        <!--<security:authentication-provider user-service-ref="customUserDetailsService" />-->
        <!--<security:authentication-provider ref="customAuthenticationProvider" />-->
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="datasource"
                group-authorities-by-username-query="select
                                                     g.id, g.group_name, ga.authority
                                                     from groups g, group_members gm, group_authorities ga
                                                     where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id"
            />
           <!-- <security:password-encoder hash="bcrypt"/>-->
            <security:password-encoder ref="bcryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
</beans>